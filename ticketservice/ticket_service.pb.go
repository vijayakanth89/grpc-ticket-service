// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: ticketservice/ticket_service.proto

package ticketservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketReallocResMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewSeatNo string `protobuf:"bytes,1,opt,name=newSeatNo,proto3" json:"newSeatNo,omitempty"`
	OldSeatNo string `protobuf:"bytes,2,opt,name=oldSeatNo,proto3" json:"oldSeatNo,omitempty"`
	TicketNo  string `protobuf:"bytes,3,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
}

func (x *TicketReallocResMsg) Reset() {
	*x = TicketReallocResMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketReallocResMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketReallocResMsg) ProtoMessage() {}

func (x *TicketReallocResMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketReallocResMsg.ProtoReflect.Descriptor instead.
func (*TicketReallocResMsg) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{0}
}

func (x *TicketReallocResMsg) GetNewSeatNo() string {
	if x != nil {
		return x.NewSeatNo
	}
	return ""
}

func (x *TicketReallocResMsg) GetOldSeatNo() string {
	if x != nil {
		return x.OldSeatNo
	}
	return ""
}

func (x *TicketReallocResMsg) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

type DummyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DummyMessage) Reset() {
	*x = DummyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DummyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DummyMessage) ProtoMessage() {}

func (x *DummyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DummyMessage.ProtoReflect.Descriptor instead.
func (*DummyMessage) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{1}
}

type TicketsMinListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*TicketEntry `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *TicketsMinListRes) Reset() {
	*x = TicketsMinListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketsMinListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketsMinListRes) ProtoMessage() {}

func (x *TicketsMinListRes) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketsMinListRes.ProtoReflect.Descriptor instead.
func (*TicketsMinListRes) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{2}
}

func (x *TicketsMinListRes) GetTickets() []*TicketEntry {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type TicketEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNo   string `protobuf:"bytes,1,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	SeatNumber string `protobuf:"bytes,3,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	Section    string `protobuf:"bytes,4,opt,name=section,proto3" json:"section,omitempty"`
}

func (x *TicketEntry) Reset() {
	*x = TicketEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketEntry) ProtoMessage() {}

func (x *TicketEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketEntry.ProtoReflect.Descriptor instead.
func (*TicketEntry) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{3}
}

func (x *TicketEntry) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

func (x *TicketEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TicketEntry) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *TicketEntry) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

type CancelTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNo string `protobuf:"bytes,1,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CancelTicketRequest) Reset() {
	*x = CancelTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTicketRequest) ProtoMessage() {}

func (x *CancelTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTicketRequest.ProtoReflect.Descriptor instead.
func (*CancelTicketRequest) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{4}
}

func (x *CancelTicketRequest) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

func (x *CancelTicketRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CancelTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CancelTicketResponse) Reset() {
	*x = CancelTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTicketResponse) ProtoMessage() {}

func (x *CancelTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTicketResponse.ProtoReflect.Descriptor instead.
func (*CancelTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{5}
}

func (x *CancelTicketResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AllocationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNo string       `protobuf:"bytes,2,opt,name=trainNo,proto3" json:"trainNo,omitempty"`
	Section string       `protobuf:"bytes,3,opt,name=section,proto3" json:"section,omitempty"`
	Entries []*SeatEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *AllocationStatusResponse) Reset() {
	*x = AllocationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationStatusResponse) ProtoMessage() {}

func (x *AllocationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationStatusResponse.ProtoReflect.Descriptor instead.
func (*AllocationStatusResponse) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{6}
}

func (x *AllocationStatusResponse) GetTrainNo() string {
	if x != nil {
		return x.TrainNo
	}
	return ""
}

func (x *AllocationStatusResponse) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *AllocationStatusResponse) GetEntries() []*SeatEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SeatEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNumber string `protobuf:"bytes,1,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
	UserInfo   *User  `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *SeatEntry) Reset() {
	*x = SeatEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatEntry) ProtoMessage() {}

func (x *SeatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatEntry.ProtoReflect.Descriptor instead.
func (*SeatEntry) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{7}
}

func (x *SeatEntry) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *SeatEntry) GetUserInfo() *User {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type AllocationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNo string `protobuf:"bytes,1,opt,name=trainNo,proto3" json:"trainNo,omitempty"`
	Section string `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"`
}

func (x *AllocationStatusRequest) Reset() {
	*x = AllocationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationStatusRequest) ProtoMessage() {}

func (x *AllocationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationStatusRequest.ProtoReflect.Descriptor instead.
func (*AllocationStatusRequest) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{8}
}

func (x *AllocationStatusRequest) GetTrainNo() string {
	if x != nil {
		return x.TrainNo
	}
	return ""
}

func (x *AllocationStatusRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Tickets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TicketNo string `protobuf:"bytes,2,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
}

func (x *Tickets) Reset() {
	*x = Tickets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tickets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tickets) ProtoMessage() {}

func (x *Tickets) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tickets.ProtoReflect.Descriptor instead.
func (*Tickets) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{10}
}

func (x *Tickets) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Tickets) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

type TimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TimeRequest) Reset() {
	*x = TimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRequest) ProtoMessage() {}

func (x *TimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRequest.ProtoReflect.Descriptor instead.
func (*TimeRequest) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{11}
}

func (x *TimeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime string `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *TimeResponse) Reset() {
	*x = TimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeResponse) ProtoMessage() {}

func (x *TimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeResponse.ProtoReflect.Descriptor instead.
func (*TimeResponse) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{12}
}

func (x *TimeResponse) GetCurrentTime() string {
	if x != nil {
		return x.CurrentTime
	}
	return ""
}

type PurchaseRequestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	TrainNo   string `protobuf:"bytes,4,opt,name=trainNo,proto3" json:"trainNo,omitempty"`
}

func (x *PurchaseRequestMsg) Reset() {
	*x = PurchaseRequestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequestMsg) ProtoMessage() {}

func (x *PurchaseRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequestMsg.ProtoReflect.Descriptor instead.
func (*PurchaseRequestMsg) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{13}
}

func (x *PurchaseRequestMsg) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PurchaseRequestMsg) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PurchaseRequestMsg) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PurchaseRequestMsg) GetTrainNo() string {
	if x != nil {
		return x.TrainNo
	}
	return ""
}

type TicketPurchaseResMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	TrainNo   string `protobuf:"bytes,4,opt,name=trainNo,proto3" json:"trainNo,omitempty"`
	Section   string `protobuf:"bytes,5,opt,name=section,proto3" json:"section,omitempty"`
	SeatNo    string `protobuf:"bytes,6,opt,name=seatNo,proto3" json:"seatNo,omitempty"`
	Error     string `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	TicketNo  string `protobuf:"bytes,8,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	From      string `protobuf:"bytes,9,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,10,opt,name=to,proto3" json:"to,omitempty"`
	Price     string `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *TicketPurchaseResMsg) Reset() {
	*x = TicketPurchaseResMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketservice_ticket_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketPurchaseResMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketPurchaseResMsg) ProtoMessage() {}

func (x *TicketPurchaseResMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ticketservice_ticket_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketPurchaseResMsg.ProtoReflect.Descriptor instead.
func (*TicketPurchaseResMsg) Descriptor() ([]byte, []int) {
	return file_ticketservice_ticket_service_proto_rawDescGZIP(), []int{14}
}

func (x *TicketPurchaseResMsg) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetTrainNo() string {
	if x != nil {
		return x.TrainNo
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetSeatNo() string {
	if x != nil {
		return x.SeatNo
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TicketPurchaseResMsg) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

var File_ticketservice_ticket_service_proto protoreflect.FileDescriptor

var file_ticketservice_ticket_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x77, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x77, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4d, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x7b, 0x0a,
	0x0b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x09, 0x53, 0x65,
	0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x17, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x3d, 0x0a, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x22, 0x21,
	0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x31, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x4e, 0x6f, 0x22, 0x9e, 0x02, 0x0a, 0x14, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x32, 0x99, 0x04, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0x23, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x4d, 0x73,
	0x67, 0x12, 0x63, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x50, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x22, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x4d, 0x73,
	0x67, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x76, 0x69, 0x6a, 0x61, 0x79, 0x61, 0x6b, 0x61, 0x6e, 0x74, 0x68, 0x38, 0x39, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticketservice_ticket_service_proto_rawDescOnce sync.Once
	file_ticketservice_ticket_service_proto_rawDescData = file_ticketservice_ticket_service_proto_rawDesc
)

func file_ticketservice_ticket_service_proto_rawDescGZIP() []byte {
	file_ticketservice_ticket_service_proto_rawDescOnce.Do(func() {
		file_ticketservice_ticket_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketservice_ticket_service_proto_rawDescData)
	})
	return file_ticketservice_ticket_service_proto_rawDescData
}

var file_ticketservice_ticket_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_ticketservice_ticket_service_proto_goTypes = []any{
	(*TicketReallocResMsg)(nil),      // 0: ticketservice.TicketReallocResMsg
	(*DummyMessage)(nil),             // 1: ticketservice.DummyMessage
	(*TicketsMinListRes)(nil),        // 2: ticketservice.TicketsMinListRes
	(*TicketEntry)(nil),              // 3: ticketservice.TicketEntry
	(*CancelTicketRequest)(nil),      // 4: ticketservice.CancelTicketRequest
	(*CancelTicketResponse)(nil),     // 5: ticketservice.CancelTicketResponse
	(*AllocationStatusResponse)(nil), // 6: ticketservice.AllocationStatusResponse
	(*SeatEntry)(nil),                // 7: ticketservice.SeatEntry
	(*AllocationStatusRequest)(nil),  // 8: ticketservice.AllocationStatusRequest
	(*User)(nil),                     // 9: ticketservice.User
	(*Tickets)(nil),                  // 10: ticketservice.Tickets
	(*TimeRequest)(nil),              // 11: ticketservice.TimeRequest
	(*TimeResponse)(nil),             // 12: ticketservice.TimeResponse
	(*PurchaseRequestMsg)(nil),       // 13: ticketservice.PurchaseRequestMsg
	(*TicketPurchaseResMsg)(nil),     // 14: ticketservice.TicketPurchaseResMsg
}
var file_ticketservice_ticket_service_proto_depIdxs = []int32{
	3,  // 0: ticketservice.TicketsMinListRes.tickets:type_name -> ticketservice.TicketEntry
	7,  // 1: ticketservice.AllocationStatusResponse.entries:type_name -> ticketservice.SeatEntry
	9,  // 2: ticketservice.SeatEntry.user_info:type_name -> ticketservice.User
	13, // 3: ticketservice.TimeService.TicketPurchaseService:input_type -> ticketservice.PurchaseRequestMsg
	10, // 4: ticketservice.TimeService.GetReceipt:input_type -> ticketservice.Tickets
	8,  // 5: ticketservice.TimeService.AllocationStatus:input_type -> ticketservice.AllocationStatusRequest
	4,  // 6: ticketservice.TimeService.CancelTicket:input_type -> ticketservice.CancelTicketRequest
	1,  // 7: ticketservice.TimeService.GetAllTickets:input_type -> ticketservice.DummyMessage
	3,  // 8: ticketservice.TimeService.SeatReallocate:input_type -> ticketservice.TicketEntry
	14, // 9: ticketservice.TimeService.TicketPurchaseService:output_type -> ticketservice.TicketPurchaseResMsg
	14, // 10: ticketservice.TimeService.GetReceipt:output_type -> ticketservice.TicketPurchaseResMsg
	6,  // 11: ticketservice.TimeService.AllocationStatus:output_type -> ticketservice.AllocationStatusResponse
	5,  // 12: ticketservice.TimeService.CancelTicket:output_type -> ticketservice.CancelTicketResponse
	2,  // 13: ticketservice.TimeService.GetAllTickets:output_type -> ticketservice.TicketsMinListRes
	0,  // 14: ticketservice.TimeService.SeatReallocate:output_type -> ticketservice.TicketReallocResMsg
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_ticketservice_ticket_service_proto_init() }
func file_ticketservice_ticket_service_proto_init() {
	if File_ticketservice_ticket_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticketservice_ticket_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TicketReallocResMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DummyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TicketsMinListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TicketEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CancelTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CancelTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AllocationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SeatEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AllocationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Tickets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PurchaseRequestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketservice_ticket_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TicketPurchaseResMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketservice_ticket_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketservice_ticket_service_proto_goTypes,
		DependencyIndexes: file_ticketservice_ticket_service_proto_depIdxs,
		MessageInfos:      file_ticketservice_ticket_service_proto_msgTypes,
	}.Build()
	File_ticketservice_ticket_service_proto = out.File
	file_ticketservice_ticket_service_proto_rawDesc = nil
	file_ticketservice_ticket_service_proto_goTypes = nil
	file_ticketservice_ticket_service_proto_depIdxs = nil
}
